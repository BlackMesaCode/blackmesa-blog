@using BlackMesa.Website.Main.Resources

@model BlackMesa.Website.Main.Areas.Learning.ViewModels.Folder.FolderDetailsViewModel

@{
    ViewBag.Title = Model.Name;
}



@* ------------------- Content ------------------- *@

<div id="content">
    <section id="folder-details">

        @Html.Partial("_Path", Model.Path)

        <div class="tile-splitter">
            <div class="tile gray-darker">
                <h1>@ViewBag.Title</h1>
            </div>

            @if (Model.IsSelected)
            {
                <a class="tile gray-darker checked" href="@Url.Action("RemoveFolder", "Selection", new { folderId = Model.Id, returnFolderId = Model.Id })">
                    <i class="icon-checked-square"></i>
                </a>
            }
            else
            {
                <a class="tile gray-darker unchecked" href="@Url.Action("AddFolder", "Selection", new { folderId = Model.Id, returnFolderId = Model.Id })">
                    <i class="icon-unchecked-square"></i>
                </a>
            }
        </div>


        @foreach (var subFolder in Model.SubFolders)
        {
            <div class="tile-splitter">
                <a class="tile gray-light-hover" href="@Url.Action("Details", "Folder", new { id = subFolder.Id })">
                    <i class="icon-folder"> </i>@subFolder.Name
                </a>

                @if (subFolder.IsSelected)
                {
                    <a class="tile gray-light-hover checked" href="@Url.Action("RemoveFolder", "Selection", new { folderId = subFolder.Id, returnFolderId = Model.Id })">
                        <i class="icon-checked-square"></i>
                    </a>
                }
                else
                {
                    <a class="tile gray-light-hover unchecked" href="@Url.Action("AddFolder", "Selection", new { folderId = subFolder.Id, returnFolderId = Model.Id })">
                        <i class="icon-unchecked-square"></i>
                    </a>
                }
            </div>
        }


        @foreach (var indexCard in Model.IndexCards)
        {
            <div class="tile-splitter">
                <a class="tile gray-light-hover" href="@Url.Action("Details", "IndexCard", new { id = indexCard.Id })">
                    <i class="icon-indexcard"> </i>@indexCard.Question
                </a>

                @if (indexCard.IsSelected)
                {
                    <a class="tile gray-light-hover checked" href="@Url.Action("RemoveUnit", "Selection", new { unitId = indexCard.Id, returnFolderId = Model.Id })">
                        <i class="icon-checked-square"></i>
                    </a>
                }
                else
                {
                    <a class="tile gray-light-hover unchecked" href="@Url.Action("AddUnit", "Selection", new { unitId = indexCard.Id, returnFolderId = Model.Id })">
                        <i class="icon-unchecked-square"></i>
                    </a>
                }
            </div>
        }

    </section>

    
</div>



@* ------------------- Submenu ------------------- *@

<nav id="folder-submenu" class="submenu">
    
    <a class="red-hover" href="@Url.Action("Edit", "Folder", new { id = Model.Id })" title="@Strings.Edit">
        <i class="icon-edit"></i>
    </a>
    
    <a class="red-hover" href="@Url.Action("Move", "Folder", new { id = Model.Id })" title="@Strings.Move">
        <i class="icon-move"></i>
    </a>
    
    <a class="red-hover" href="@Url.Action("Search", "Folder", new { id = Model.Id })" title="@Strings.Search">
        <i class="icon-search"></i>
    </a>

    <a class="red-hover" href="@Url.Action("Delete", "Folder", new { id = Model.Id })" title="@Strings.Delete">
        <i class="icon-delete"></i>
    </a>
    
    <a class="back-tile gray-light-hover" href="#" title="@Strings.Back">
        <i class="icon-back"></i>
    </a>

</nav>


@* ------------------- Submenu ------------------- *@

<nav id="create-submenu" class="submenu">

    <a class="red-hover" href="@Url.Action("Create", "IndexCard", new { folderId = Model.Id })" title="@Strings.CreateIndexCard">
        <i class="icon-indexcard"></i>
    </a>

    <a class="red-hover" href="@Url.Action("Create", "Folder", new { parentFolderId = Model.Id })" title="@Strings.CreateSubFolder">
        <i class="icon-folder"></i>
    </a>
    
    <a class="back-tile gray-light-hover" href="#" title="@Strings.Back">
        <i class="icon-back"></i>
    </a>
</nav>


@* ------------------- Menu ------------------- *@

<nav id="menu">
    
    @if (Model.HasAnySelection)
    {
        <a class="red-hover" href="@Url.Action("Move", "Selection", new { id = Model.Id })" title="@Strings.Move">
            <i class="icon-move"></i>
        </a>
    
        <a class="red-hover" href="@Url.Action("Delete", "Selection", new { folderId = Model.Id })" title="@Strings.Delete">
            <i class="icon-delete"></i>
        </a>

        <a class="red-hover" href="@Url.Action("RemoveFolder", "Selection", new { folderId = Model.Id, returnFolderId = Model.Id })" title="@Strings.Abort">
            <i class="icon-abort"></i>
        </a>
    }
    else
    {
        <a class="red-hover" href="@Url.Action("Setup", "Query", new { folderId = Model.Id })" title="@Strings.StartQuery">
            <i class="icon-rocket"></i>
        </a>
    
        <a class="red-hover" href="@Url.Action("Create", "IndexCard", new { folderId = Model.Id })" title="@Strings.CreateIndexCard">
            <i class="icon-plus prefix-icon"></i><i class="icon-indexcard"></i>
        </a>

        <a class="red-hover" href="@Url.Action("Create", "Folder", new { parentFolderId = Model.Id })" title="@Strings.CreateSubFolder">
            <i class="icon-plus prefix-icon"></i><i class="icon-folder"></i>
        </a>
    
        <a class="red-hover" href="@Url.Action("Options", "Folder", new { id = Model.Id })" title="@Strings.Options">
            <i class="icon-wrench"></i>
        </a>
    }

    

</nav>


@section Scripts {

    <script src="~/Areas/Learning/Javascript/folder-details.js"></script>

}