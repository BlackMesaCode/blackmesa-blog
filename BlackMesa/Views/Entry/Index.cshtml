@model BlackMesa.ViewModels.EntryIndexViewModel

@{
    ViewBag.Title = "Index";
}


<section id="entry-index">
    
    <div class="clearfix" id="entries-top-bar">
        @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "entry-filter-form" }))
        {
            <ul style="float: right" class="tag-input"></ul>
            <input id="SelectedTags" name="SelectedTags" type="hidden" value="" />
        }

        <span style="float: right; line-height: 30px; min-height: 30px; vertical-align: middle; margin-right: 10px; margin-left: 20px;"><i class="icon-tags"></i> Filter by tag: </span>
        

        <div style="float: right; line-height: 30px" id="sort-bar">
            <i class="icon-info-sign"></i> Entries found: @Model.Entries.Count() 
            

            @*<i class="icon-reorder"></i> Sort by: 
            @Html.ActionLink("Most Recent", "Index", new { orderBy = "date" })  | @Html.ActionLink("Most Viewed", "Index", new { orderBy = "views" }) | @Html.ActionLink("Most Commented", "Index", new { orderBy = "comments" })*@
            

        </div>
    </div>
    


    @foreach (var item in Model.Entries)
    {
        @Html.Partial("_EntryPreview", item)
    }

    <div id="entries-bottom-bar">
        <a class="btn btn-primary" href="@Url.Action("Create")">
            <i class="icon-plus-sign"></i> Add Entry
        </a>
  
        <div class="pagination">
            <ul>
                <li><a href="#">Prev</a></li>
                <li><a href="#">1</a></li>
                <li><a href="#">2</a></li>
                <li><a href="#">3</a></li>
                <li><a href="#">4</a></li>
                <li><a href="#">Next</a></li>
            </ul>
        </div>
    </div>

</section>


@section Scripts
{
    <script type="text/javascript">

        var submitForm = function() {
            var serializedTags = $(".tag-input").tagHandler("getSerializedTags");
            $('#SelectedTags').val(serializedTags);
            $("#entry-filter-form").submit();
        };

        $(".tag-input").tagHandler({
            getData: { selectedTags: '@Model.SelectedTags' },
            getURL: '@Url.Action("JsonIndex", "Tag")',
            afterAdd: submitForm,
            afterDelete: submitForm,
            allowAdd: false,
            msgNoNewTag: "Please select an existing tag from the list.",
            autocomplete: true,
        });
    </script>

}
