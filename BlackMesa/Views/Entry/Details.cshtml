@using BlackMesa.Models
@model BlackMesa.Models.Entry

@{
    ViewBag.Title = Model.Title;
}

<section id="entry-details">

    <article>
    
        @Html.Partial("_EntryHead", Model)

        @Html.Raw(Model.Content) 

        <div class="btn-group">
            <a class="btn btn-mini dropdown-toggle" data-toggle="dropdown" href="#">
                <i class="icon-cog"></i> Entry
                <span class="caret"></span>
            </a>
            <ul class="dropdown-menu">
                <li><a href="@Url.Action("Edit", "Entry", new { id=Model.Id })"><i class="icon-pencil"></i> Edit</a></li>
                <li><a href="@Url.Action("Delete", "Entry", new { id=Model.Id })"><i class="icon-trash"></i> Delete</a></li>
            </ul>
        </div>
    
    
    
        @Html.Partial("Comment/_Index", Model.Comments)
        
    </article>

    @Html.Partial("Comment/_Create", new Comment{ EntryId = Model.Id } )
    
</section>

@section Scripts
{

    <script type="text/javascript">
        $(function () {
            
            /* SyntaxHighlighter */

            SyntaxHighlighter.autoloader(
                'js jscript javascript            /Scripts/shBrushes/shBrushJScript.js',
                'c-sharp, csharp	                /Scripts/shBrushes/shBrushCSharp.js',
                'ps, powershell	                /Scripts/shBrushes/shBrushPowerShell.js',
                'xml, xhtml, xslt, html, xhtml	/Scripts/shBrushes/shBrushXml.js',
                'sql                              /Scripts/shBrushes/shBrushSql.js',
                'bash, shell	                    /Scripts/shBrushes/shBrushBash.js',
                'plain, text	                    /Scripts/shBrushes/shBrushPlain.js'
            );

            var elementsToBeHighlighted = SyntaxHighlighter.findElements().length,
                highlightedElements = 0;

            SyntaxHighlighter.complete = function(callback) {

                (function recountHighlightedElements() {
                    setTimeout(function() {
                        highlightedElements = $('.syntaxhighlighter');
                        if (highlightedElements.length < elementsToBeHighlighted) {
                            recountHighlightedElements();
                        } else {
                            callback();
                        }
                    }, 200);
                })();
            };

            SyntaxHighlighter.complete(function() {
                $(".syntaxhighlighter").parent().addClass("sh-padding-right");
            });
                
            SyntaxHighlighter.all();
        });

    </script>
    

}
